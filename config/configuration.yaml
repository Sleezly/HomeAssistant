homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Los_Angeles
  # List of folders that can be used as sources for sending files
  whitelist_external_dirs:
  - /tmp
  # Customization file
  customize: !include customize.yaml
  # Packages
  packages: !include_dir_named packages
  auth_providers:
    - type: homeassistant
    - type: trusted_networks
      trusted_networks:
        - 192.168.1.0/24
  # Location required to calculate the time the sun rises and sets
  latitude: !secret secret_latitude
  longitude: !secret secret_longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 32

mobile_app:

#http:
#  base_url: https://leslietrowbridge.com:8123
#  ssl_certificate: /ssl/fullchain.pem
#  ssl_key: /ssl/privkey.pem

# Python script for Weather
python_script:
  
# Show links to resources in log and frontend
#introduction:

# Enables the frontend
frontend:

# Enables configuration UI
config:

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:
  ignore:
    - igd

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

system_health:

# Enables a map showing the location of tracked devices
#map:

# Track the sun
#sun:

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say

# MQTT
mqtt:
  broker: core-mosquitto
  username: mqttadmin
  password: !secret mqtt_password
  
mqtt_statestream:
  base_topic: homeassistant
  publish_attributes: false
  publish_timestamps: false

#panel_iframe:
#  pihole:
#    title: Pi-Hole
#    icon: mdi:pi-box
#    url: http://192.168.1.2:4865/admin/index.php

nest:
  client_id: !secret nest_client_id
  client_secret: !secret nest_client_secret

hue:
  bridges:
    - host: 192.168.1.49
      filename: phue-0017882bca40.conf
    - host: 192.168.1.18
      filename: phue-0017886e5a54.conf

notify:
  - name: My PushBullet
    platform: pushbullet
    api_key: !secret pubhbullet_access_token
    
  - platform: webostv
    host: 192.168.1.13
    name: TV
    filename: webostv.conf

tplink:
  discovery: true
    
switch:
  - platform: mqtt
    name: "Flux"
    command_topic: "home/flux/set"
    payload_on: 'true'
    payload_off: 'false'
    retain: true

#  - platform: rest
#    resource: !secret flux_controller
#    name: Flux
#    method: post
#    body_on: '{"On": "on", "LightLevel": {{states.sensor.outside_lightlevel.state}}}'
#    body_off: '{"On": "off", "LightLevel": {{states.sensor.outside_lightlevel.state}}}'
#    is_on_template: '{{value_json.On}}'

  - platform: rest
    resource: !secret hue_sensor_presence_guest
    name: Guest
    method: put
    body_on: '{"state": {"presence": true} }'
    body_off: '{"state": {"presence": false} }'
    is_on_template: '{{value_json.state.presence}}'
    
  - platform: mqtt
    name: "Door Alarms"
    command_topic: "home/alarms"
    payload_on: '{ "State": "On" }'
    payload_off: '{ "State": "Off" }'

#cover:
#  - platform: mqtt
#    name: "Garage Door"
#    state_topic: "home/garage/garagedoor/state"
#    command_topic: "home/garage/garagedoor/set"
#    availability_topic: "home/garage/garagedoor/available"
#    payload_open: "OPEN"
#    payload_close: "CLOSE"
#    payload_stop: "STOP"
#    state_open: "open"
#    state_closed: "closed"
#    payload_available: "online"
#    payload_not_available: "offline"
#    optimistic: true
#    retain: true
#    #value_template: '{{ value.x }}'
#    device_class: garage

rest_command:
  pc_source_select_aux:
    url: !secret soundtouch_wireless_link
    method: POST
    headers:
      content-type: application/xml
    payload: '<ContentItem source="AUX" sourceAccount="AUX"></ContentItem>'

  pc_source_select_bluetooth:
    url: !secret soundtouch_wireless_link
    method: POST
    headers:
      content-type: application/xml
    payload: '<ContentItem source="BLUETOOTH"></ContentItem>'

  flux_lightlevel_set:
    url: !secret flux_controller
    method: POST
    headers:
      content-type: application/json
    payload: '{"On": "{{states.switch.flux.state}}", "LightLevel": {{states.sensor.outside_lightlevel.state}}}'

  hue_scene_flux_downstairs:
    url: !secret hue_group_downstairs
    method: PUT
    headers:
      content-type: application/json
    payload: '{"scene": "z9RunyN2QTW6r77"}'
        
  hue_scene_flux_accents:
    url: !secret hue_group_accents
    method: PUT
    headers:
      content-type: application/json
    payload: '{"scene": "EAVkqQcoZPKOCgg"}'
    
  hue_scene_flux_entry:
    url: !secret hue_group_entry
    method: PUT
    headers:
      content-type: application/json
    payload: '{"scene": "0p5dWfRJ5MuW84N"}'
    
  hue_scene_dinner_downstairs:
    url: !secret hue_group_downstairs
    method: PUT
    headers:
      content-type: application/json
    payload: '{"scene": "i2U-rnmqfdLoXWo"}'
    
  hue_scene_dinner_accents:
    url: !secret hue_group_accents
    method: PUT
    headers:
      content-type: application/json
    payload: '{"scene": "v4lk94YAJcqWVgO"}'
    
  hue_scene_tv_downstairs:
    url: !secret hue_group_downstairs
    method: PUT
    headers:
      content-type: application/json
    payload: '{"scene": "KhsOwuhiiveLp9L"}'
    
  hue_scene_tv_accents:
    url: !secret hue_group_accents
    method: PUT
    headers:
      content-type: application/json
    payload: '{"scene": "G-OozK7uewVS9WK"}'
    
  hue_scene_tv_entry:
    url: !secret hue_group_entry
    method: PUT
    headers:
      content-type: application/json
    payload: '{"scene": "BD3-jG4I1eM6I8C"}'
    
weblink:
  entities: 
    - name: Router
      url: http://192.168.1.1
      icon: mdi:router-wireless
    - name: Diskstation
      url: http://192.168.1.22
      icon: mdi:server-network
    - name: Photos
      url: !secret onedrive_photos
      icon: mdi:onedrive

media_player:
  - platform: webostv
    host: 192.168.1.13
    name: TV
    filename: webostv.conf
  - platform: spotify
    client_id: !secret spotify_client_id
    client_secret: !secret spotify_client_secret

#input_number:
#  kitchen:
#    name: Presets
#    initial: 1
#    min: 1
#    max: 6
#    step: 1
#    mode: slider
#    unit_of_measurement: step

input_text:
  rfid_uid:
    name: RFID UID
    initial: None
  rfid_uid_last:
    name: Music UID
    initial: None
    
# Lights
light: !include lights.yaml

# Sensors
sensor: !include sensors.yaml

# Display
group: !include groups.yaml

# Automation
automation: !include automations.yaml

# Scripts
script: !include scripts.yaml
